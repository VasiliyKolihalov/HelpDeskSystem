version: "3"

services:
  
  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5000:80"
    depends_on:
      - authentication_webapi
      - support_tickets_webapi
      - users_webapi
  
  authentication_webapi:
    image: authentication_webapi
    container_name: authentication_webapi
    build:
      context: .
      dockerfile: Authentication.WebApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5001:80"
    depends_on:
      - postgres_db
      - users_webapi
  
  support_tickets_webapi:
    image: support_tickets_webapi
    container_name: support_tickets_webapi
    build:
      context: .
      dockerfile: SupportTickets.WebApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5002:80"
    depends_on:
      - users_webapi
      - postgres_db
      - rabbit_mq
  
  users_webapi:
    image: users_webapi
    container_name: users_webapi
    build:
      context: .
      dockerfile: Users.WebApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5003:80"
    depends_on:
      - postgres_db
      - rabbit_mq
  
  
  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgresdb:/var/lib/postgresql/data
  
  rabbit_mq:
    image: rabbitmq:3.10.7-management
    container_name: rabbit_mq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

volumes:
  postgresdb:
  rabbitmq: