version: "3"

services:
  frontend:
    image: frontend
    container_name: frontend
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    ports:
      - "4999:80"
    depends_on:
      - gateway_api
  
  gateway_api:
    image: gateway_api
    container_name: gateway_api
    build:
      context: .
      dockerfile: Gateway.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5000:80"
    depends_on:
      - support_tickets_api
      - authentication_api
      - users_api
  
  support_tickets_api:
    image: support_tickets_api
    container_name: support_tickets_api
    build:
      context: .
      dockerfile: SupportTickets.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5002:80"
    depends_on:
      - authentication_api
      - users_api
      - postgres_db
      - rabbit_mq
  
  authentication_api:
    image: authentication_api
    container_name: authentication_api
    build:
      context: .
      dockerfile: Authentication.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5001:80"
    depends_on:
      - postgres_db
      - users_api
  
  users_api:
    image: users_api
    container_name: users_api
    build:
      context: .
      dockerfile: Users.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5003:80"
    depends_on:
      - postgres_db
      - rabbit_mq
  
  resources_api:
    image: resources_api
    container_name: resources_api
    build:
      context: .
      dockerfile: Resources.Api/Dockerfile
    ports:
      - "5004:80"
    depends_on:
      - postgres_db
  
  notification_api:
    image: notification_api
    container_name: notification_api
    build:
      context: .
      dockerfile: Notification.Api/Dockerfile
    ports:
      - "5005:80"
  
  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "{optional_placeholder_that_should_be_same_as_in_docker-compose}"
    ports:
      - "5432:5432"
    volumes:
      - postgresdb:/var/lib/postgresql/data
  
  rabbit_mq:
    image: rabbitmq:3.10.7-management
    container_name: rabbit_mq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: "{optional_placeholder_that_should_be_same_as_in_docker-compose}"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

volumes:
  postgresdb:
  rabbitmq: